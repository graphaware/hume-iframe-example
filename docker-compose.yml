version: '3.7'
services:
  postgreskeycloak:
    image: docker.graphaware.com/mirror/postgres:12.0
    volumes:
      - "hume_keycloak_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    command: -p 5433
    expose:
      - "5433" # Publishes 5433 to other containers but NOT to host machine
  keycloak:
    image: quay.io/keycloak/keycloak:9.0.3
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgreskeycloak
      - DB_PORT=5433
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin123
      - PROXY_ADDRESS_FORWARDING=true
      # - KEYCLOAK_FRONTEND_URL=http://keycloak:8080
    ports:
      - "8180:8080"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/jboss/keycloak/bin/jboss-cli.sh -c command=':read-attribute(name=server-state)' |grep running"]
      interval: 10s
      timeout: 10s
      retries: 10
  # keycloakproxy:
  #   image: nginx:1.19.6
  #   volumes:
  #     - ./resources/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - 8182:80
  neo4j:
    image: docker.graphaware.com/public/neo4j:4.2.5-enterprise
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
      - NEO4J_dbms_memory_heap_maxSize=4G
      - NEO4J_dbms_connector_bolt_advertised__address=${HUME_ADVERTISED_ADDRESS:-localhost}:${NEO4J_PORT:-7687}
      - NEO4JLABS_PLUGINS=["apoc","graph-data-science"]
      - NEO4J_apoc_trigger_enabled=true
      - NEO4J_fabric_database_name=pocket
      - NEO4J_fabric_graph_0_uri=neo4j://localhost:7687
      - NEO4J_fabric_graph_0_database=search
      - NEO4J_fabric_graph_0_name=search
    volumes:
      - "hume_neo4j_data:/data"
      - "hume_neo4j_plugins:/plugins"
  orchestra:
    image: docker.graphaware.com/internal/hume-orchestra:${HUME_VERSION}
    ports:
      - 8100:8100
      - 8666:8666
    volumes:
      - ${HUME_PUBLIC_DIR:-./public}:/data
  postgres:
    image: docker.graphaware.com/public/postgres:12.0
    environment:
      POSTGRES_PASSWORD: ${HUME_DB_PASSWORD:-pgsqls3cr3t}
      POSTGRES_USER: ${HUME_DB_USER:-hume}
    ports:
      - 5432:5432
    volumes:
      - "hume_postgres_data:/var/lib/postgresql/data"
  api:
    image: docker.graphaware.com/internal/hume-api:${HUME_VERSION}
    ports:
      - "8080:8080"
      - "8001:8001"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_USERNAME=${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_PASSWORD=${HUME_DB_PASSWORD:-pgsqls3cr3t}
      - hume.orchestra.uri=http://orchestra:8100
      - hume.security.provider=keycloak
      - keycloak.auth-server-url=http://localhost:8180/auth
      - keycloak.proxy-url=http://keycloak:8080/auth
      - keycloak.realm=hume
      - keycloak.resource=hume-web
      - keycloak.public-client=true
      - keycloak.principal-attribute=preferred_username
      - keycloak.use-resource-role-mappings=true
      - keycloak.enabled=true
  web:
    image: docker.graphaware.com/internal/hume-web:${HUME_VERSION}
    environment:
      - HUME_API_URL=http://localhost:8080
      - HUME_BASE_PATH=/
      - KEYCLOAK_ENABLED=true
      - KEYCLOAK_URL=http://localhost:8180/auth
      - KEYCLOAK_REALM=hume
      - KEYCLOAK_CLIENT=hume-web
      - BASE_PATH=/
      - HUME_CROSS_DOCUMENT_MSG_VALID_URL=http://localhost:8905
      # not necessary for local deployment
      # - HUME_COOKIE_ATTRIBUTES=SameSite=None; Secure
    ports:
      - "${HUME_FRONT_PORT:-8081}:80"
  example-react-app:
    image: docker.graphaware.com/internal/hume-iframe-react-example:v3
    ports:
      - '8905:80'
    environment:
      - KEYCLOAK_URL=http://localhost:8180/auth
      - KEYCLOAK_REALM=hume
      - KEYCLOAK_CLIENT=hume-web
      - HUME_URL=http://localhost:8081
volumes:
  hume_keycloak_data:
  hume_postgres_data:
  hume_neo4j_data:
  hume_neo4j_plugins:
